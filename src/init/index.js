const path = require('path')
const chalk = require('chalk')
const yeoman = require('yeoman-environment')
const TerminalAdapter = require('yeoman-environment/lib/adapter.js')
const { boxLog } = require('../utils')

/**
 * Create Silent TerminalAdapter
 * suppress 'create' output generated by yeoman
 */
class SilentTerminalAdapter extends TerminalAdapter {
  constructor () {
    super()
    console.log()
    this.log.create = function () {}
  }
}

/**
 * Initialize a standard hera project
 * @param {String} project name
 * @param {String} config file path
 */
function init (projectName, configFile) {
  process.stdout.write(
    ` => ${chalk.cyan('Initialize a new Hera app')} (${chalk.blue(
      projectName
    )})`
  )

  const env = yeoman.createEnv(null, null, new SilentTerminalAdapter())

  env.register(require.resolve(path.join(__dirname, './generator')), 'hera:app')

  // TODO: get generator configs from configFile
  const args = []

  const generator = env.create('hera:app', {
    args,
    options: {
      projectName
    }
  })

  generator.destinationRoot(`${projectName}/${projectName}`)
  generator.run(() => {
    console.log(
      ` => ${chalk.cyan('Initialization has been successfully completed')}`
    )
    const msg =
      `${chalk.cyan(`Go to your project:`)} ${chalk.yellow(
        `cd ${projectName}`
      )} \n` +
      `${chalk.cyan('Run on browser:')} ${chalk.yellow('hera run web')} \n` +
      `${chalk.cyan('Run on android:')} ${chalk.yellow(
        'hera run android'
      )} \n` +
      `${chalk.cyan('Run on ios:')} ${chalk.yellow('hera run ios')}`
    boxLog(msg)
  })
}

module.exports = init
